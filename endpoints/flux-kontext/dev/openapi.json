{
    "openapi": "3.0.4",
    "info": {
        "title": "Queue OpenAPI for fal-ai/flux-kontext/dev",
        "version": "1.0.0",
        "description": "The OpenAPI schema for the fal-ai/flux-kontext/dev queue.",
        "x-fal-metadata": {
            "endpointId": "fal-ai/flux-kontext/dev",
            "category": "image-to-image",
            "thumbnailUrl": "https://storage.googleapis.com/fal_cdn/fal/Sound-3.jpg",
            "playgroundUrl": "https://fal.ai/models/fal-ai/flux-kontext/dev",
            "documentationUrl": "https://fal.ai/models/fal-ai/flux-kontext/dev/api"
        }
    },
    "components": {
        "securitySchemes": {
            "apiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization",
                "description": "Fal Key"
            }
        },
        "schemas": {
            "QueueStatus": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "IN_QUEUE",
                            "IN_PROGRESS",
                            "COMPLETED"
                        ]
                    },
                    "request_id": {
                        "type": "string",
                        "description": "The request id."
                    },
                    "response_url": {
                        "type": "string",
                        "description": "The response url."
                    },
                    "status_url": {
                        "type": "string",
                        "description": "The status url."
                    },
                    "cancel_url": {
                        "type": "string",
                        "description": "The cancel url."
                    },
                    "logs": {
                        "type": "object",
                        "description": "The logs.",
                        "additionalProperties": true
                    },
                    "metrics": {
                        "type": "object",
                        "description": "The metrics.",
                        "additionalProperties": true
                    },
                    "queue_position": {
                        "type": "integer",
                        "description": "The queue position."
                    }
                },
                "required": [
                    "status",
                    "request_id"
                ]
            },
            "FluxKontextDevInput": {
                "x-fal-order-properties": [
                    "prompt",
                    "image_url",
                    "num_inference_steps",
                    "seed",
                    "guidance_scale",
                    "sync_mode",
                    "num_images",
                    "enable_safety_checker",
                    "output_format",
                    "acceleration",
                    "enhance_prompt",
                    "resolution_mode"
                ],
                "type": "object",
                "properties": {
                    "prompt": {
                        "examples": [
                            "Change the setting to a day time, add a lot of people walking the sidewalk while maintaining the same style of the painting"
                        ],
                        "title": "Prompt",
                        "type": "string",
                        "description": "The prompt to edit the image."
                    },
                    "resolution_mode": {
                        "enum": [
                            "auto",
                            "match_input",
                            "1:1",
                            "16:9",
                            "21:9",
                            "3:2",
                            "2:3",
                            "4:5",
                            "5:4",
                            "3:4",
                            "4:3",
                            "9:16",
                            "9:21"
                        ],
                        "title": "Resolution Mode",
                        "type": "string",
                        "description": "\n             Determines how the output resolution is set for image editing.\n             - `auto`: The model selects an optimal resolution from a predefined set that best matches the input image's aspect ratio. This is the recommended setting for most use cases as it's what the model was trained on.\n             - `match_input`: The model will attempt to use the same resolution as the input image. The resolution will be adjusted to be compatible with the model's requirements (e.g. dimensions must be multiples of 16 and within supported limits).\n             Apart from these, a few aspect ratios are also supported.\n             ",
                        "default": "match_input"
                    },
                    "acceleration": {
                        "enum": [
                            "none",
                            "regular",
                            "high"
                        ],
                        "title": "Acceleration",
                        "type": "string",
                        "description": "The speed of the generation. The higher the speed, the faster the generation.",
                        "default": "none"
                    },
                    "num_images": {
                        "minimum": 1,
                        "title": "Num Images",
                        "type": "integer",
                        "maximum": 4,
                        "description": "The number of images to generate.",
                        "default": 1
                    },
                    "output_format": {
                        "enum": [
                            "jpeg",
                            "png"
                        ],
                        "title": "Output Format",
                        "type": "string",
                        "description": "Output format",
                        "default": "jpeg"
                    },
                    "image_url": {
                        "examples": [
                            "https://storage.googleapis.com/falserverless/example_inputs/kontext_example_input.webp"
                        ],
                        "title": "Image URL",
                        "type": "string",
                        "description": "The URL of the image to edit."
                    },
                    "sync_mode": {
                        "title": "Sync Mode",
                        "type": "boolean",
                        "description": "\n            If set to true, the function will wait for the image to be generated and uploaded\n            before returning the response. This will increase the latency of the function but\n            it allows you to get the image directly in the response without going through the CDN.\n        ",
                        "default": false
                    },
                    "enable_safety_checker": {
                        "title": "Enable Safety Checker",
                        "type": "boolean",
                        "description": "If set to true, the safety checker will be enabled.",
                        "default": true
                    },
                    "num_inference_steps": {
                        "minimum": 10,
                        "title": "Num Inference Steps",
                        "type": "integer",
                        "maximum": 50,
                        "description": "The number of inference steps to perform.",
                        "default": 28
                    },
                    "guidance_scale": {
                        "minimum": 1,
                        "title": "Guidance scale (CFG)",
                        "type": "number",
                        "maximum": 20,
                        "description": "\n            The CFG (Classifier Free Guidance) scale is a measure of how close you want\n            the model to stick to your prompt when looking for a related image to show you.\n        ",
                        "default": 2.5
                    },
                    "seed": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Seed",
                        "description": "\n            The same seed and the same prompt given to the same version of the model\n            will output the same image every time.\n        "
                    },
                    "enhance_prompt": {
                        "title": "Enhance Prompt",
                        "type": "boolean",
                        "description": "Whether to enhance the prompt for better results.",
                        "default": false
                    }
                },
                "title": "BaseKontextEditInput",
                "required": [
                    "prompt",
                    "image_url"
                ]
            },
            "FluxKontextDevOutput": {
                "x-fal-order-properties": [
                    "images",
                    "timings",
                    "seed",
                    "has_nsfw_concepts",
                    "prompt"
                ],
                "type": "object",
                "properties": {
                    "prompt": {
                        "title": "Prompt",
                        "type": "string",
                        "description": "The prompt used for generating the image."
                    },
                    "images": {
                        "examples": [
                            [
                                {
                                    "height": 768,
                                    "content_type": "image/jpeg",
                                    "url": "https://storage.googleapis.com/falserverless/example_outputs/kontext_example_output.jpeg",
                                    "width": 1024
                                }
                            ]
                        ],
                        "title": "Images",
                        "type": "array",
                        "description": "The generated image files info.",
                        "items": {
                            "$ref": "#/components/schemas/Image"
                        }
                    },
                    "timings": {
                        "additionalProperties": {
                            "type": "number"
                        },
                        "type": "object",
                        "title": "Timings"
                    },
                    "has_nsfw_concepts": {
                        "title": "Has Nsfw Concepts",
                        "type": "array",
                        "description": "Whether the generated images contain NSFW concepts.",
                        "items": {
                            "type": "boolean"
                        }
                    },
                    "seed": {
                        "title": "Seed",
                        "type": "integer",
                        "description": "\n            Seed of the generated Image. It will be the same value of the one passed in the\n            input or the randomly generated that was used in case none was passed.\n        "
                    }
                },
                "title": "KontextEditOutput",
                "required": [
                    "images",
                    "timings",
                    "seed",
                    "has_nsfw_concepts",
                    "prompt"
                ]
            },
            "Image": {
                "x-fal-order-properties": [
                    "url",
                    "width",
                    "height",
                    "content_type"
                ],
                "type": "object",
                "properties": {
                    "height": {
                        "title": "Height",
                        "type": "integer"
                    },
                    "content_type": {
                        "title": "Content Type",
                        "type": "string",
                        "default": "image/jpeg"
                    },
                    "url": {
                        "title": "Url",
                        "type": "string"
                    },
                    "width": {
                        "title": "Width",
                        "type": "integer"
                    }
                },
                "title": "Image",
                "required": [
                    "url",
                    "width",
                    "height"
                ]
            }
        }
    },
    "paths": {
        "/fal-ai/flux-kontext/dev/requests/{request_id}/status": {
            "get": {
                "parameters": [
                    {
                        "name": "request_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Request ID"
                        }
                    },
                    {
                        "name": "logs",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "description": "Whether to include logs (`1`) in the response or not (`0`)."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request status.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueueStatus"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fal-ai/flux-kontext/dev/requests/{request_id}/cancel": {
            "put": {
                "parameters": [
                    {
                        "name": "request_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Request ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was cancelled.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "description": "Whether the request was cancelled successfully."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fal-ai/flux-kontext/dev": {
            "post": {
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FluxKontextDevInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request status.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueueStatus"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fal-ai/flux-kontext/dev/requests/{request_id}": {
            "get": {
                "parameters": [
                    {
                        "name": "request_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Request ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FluxKontextDevOutput"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://queue.fal.run"
        }
    ],
    "security": [
        {
            "apiKeyAuth": []
        }
    ]
}